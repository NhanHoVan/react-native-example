export default {
    title: {
        project: 'React Native Example',
        account: 'Account',
        accountSetting: 'Account Setting'
    },
    text: {
        skip: 'Skip',
        inforSkipLoggin: '',
        continue: 'Continue',
        forgetPassword: 'Forgot Password',
        createAccount: 'Create a new account',
        passwordRetrieval: 'Password Retrieval',
        accept: 'Accept',
        terms: 'Terms of Service',
        register: 'Register',
        inforAccuracy: 'Please enter the verification code sent to your registered email',
        confirm: 'Confirm',
        account: 'Account',
        login: 'Login',
        logout: 'Logout',
        vie: 'Vietnamese',
        eng: 'English',
        feedbackLabel: 'Give developer feedback',
        feedback: 'Feedback',
        feedbackSubject: 'Subject',
        feedbackContent: 'Content',
        send: 'Send',
        userInfor: '{name}</br>Email: {email}</br>Language: {language}',
        nameAccount: 'Account name',
        email: 'Email',
        language: 'Language',
        oldPassword: 'Current Password',
        newPassword: 'New Password',
        rePassword: 'Re-enter Password',
        save: 'Save',
        deleteInfor: 'Do you want to delete your account?',
        delete: 'Delete',
        phoneNumberUser: 'Phone Number',
        emailUser: 'Email',
        languageUser: 'Language',
        reSendCode: 'Resend Code',
        rememberMe: 'Remember me',
        change: 'Change'
    },
    placeholder: {
        account: 'Email or account name',
        password: 'Password',
        yourEmail: 'Your Email',
        yourAccount: 'User name',
        rePassword: 'Enter the password',
        verificationCode: 'Verification codes',
        search: 'Search'
    },
    message: {
        passwordRetrieval: 'New password has been sent to your email.',
        loginUser: 'Please login to continue',
        saveSuccess: 'Successfully saved information',
        serverConnectError: 'Server connect error',
        movedPermanently: 'Moved permanently',
        notFoundError: 'Not found error',
        forbiddenError: 'For bidden error'
    },
    validate: {
        userNameRequire: 'Requires entering username',
        passwordRequire: 'Requires entering password',
        rePasswordEqual: 'Password doesn\'t match',
        emailRequire: 'Requires entering email',
        emailPattern: 'Please enter correct email',
        codeRequire: 'Requires entering authentication code',
        subjectRequire: 'Requires entering subject',
        contentRequire: 'Requires entering content'
    }
}
